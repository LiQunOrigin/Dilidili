<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.liqun.dilidili.dao.VideoDao">

    <insert id="addVideos" parameterType="com.liqun.dilidili.domain.Video" useGeneratedKeys="true" keyProperty="id">
        insert into t_video(id,
                            userId,
                            url,
                            thumbnail,
                            title,
                            `type`,
                            duration,
                            area,
                            description,
                            createTime)
        values (#{id},
                #{userId},
                #{url},
                #{thumbnail},
                #{title},
                #{type},
                #{duration},
                #{area},
                #{description},
                #{createTime})
    </insert>

    <insert id="batchAddVideoTags" parameterType="java.util.List">
        insert into
        t_video_tag(
        videoId,
        tagId,
        createTime
        )values
        <foreach collection="videoTagList" item="videoTag" separator=",">
            (
            #{videoTag.videoId},
            #{videoTag.tagId},
            #{videoTag.createTime}
            )
        </foreach>
    </insert>
    <insert id="addVideoLikes">
        insert into t_video_like(videoId,
                                 userId,
                                 createTime)
        values (#{videoId},
                #{userId},
                #{createTime})
    </insert>
    <insert id="addVideoCollections">
        insert into t_video_collection(videoId,
                                       userId,
                                       groupId,
                                       createTime)
        values (#{videoId},
                #{userId},
                #{groupId},
                #{createTime})
    </insert>
    <insert id="addVideoCoins">
        insert into t_video_coin(videoId,
                                 userId,
                                 amount,
                                 createTime)
        values (#{videoId},
                #{userId},
                #{amount},
                #{createTime})
    </insert>
    <insert id="addVideoComments">
        insert into t_video_comment(videoId,
                                    userId,
                                    comment,
                                    replyUserId,
                                    rootId,
                                    createTime)
        values (#{videoId},
                #{userId},
                #{comment},
                #{replyUserId},
                #{rootId},
                #{createTime})
    </insert>
    <update id="updateVideoCoins" parameterType="com.liqun.dilidili.domain.VideoCoin">
        update t_video_coin
        set amount = #{amount},
            updateTime = #{updateTime}
        where videoId = #{videoId}
          and userId = #{userId}
    </update>
    <delete id="deleteVideoLikes">
        delete
        from t_video_like
        where videoId = #{videoId}
          and userId = #{userId}
    </delete>
    <delete id="deleteVideoCollections">
        delete
        from t_video_collection
        where videoId = #{videoId}
          and userId = #{userId}
    </delete>
    <select id="pageCountVideos" resultType="java.lang.Integer">
        select count(1) from t_video
        where 1=1
        <if test="area != null and area != ''">
            and area = #{area}
        </if>
    </select>
    <select id="pageListVideos" resultType="com.liqun.dilidili.domain.Video">
        select * from t_video
        where 1=1
        <if test="area != null and area != ''">
            and area = #{area}
        </if>
        oder by id desc
        limit #{start},#{size}
    </select>
    <select id="getVideoById" resultType="com.liqun.dilidili.domain.Video">
        select *
        from t_video
        where id = #{id}
    </select>
    <select id="getVideoLikeByVideoIdAndUserId" resultType="com.liqun.dilidili.domain.VideoLike">
        select *
        from t_video_like
        where videoId = #{videoId}
          and userId = #{userId}
    </select>
    <select id="getVideoLikes" resultType="java.lang.Long">
        select count(1)
        from t_video_like
        where videoId = #{videoId}
    </select>
    <select id="getVideoCollections" resultType="long">
        select count(1)
        from t_video_collection
        where videoId = #{videoId}
          and userId = #{userId}
    </select>
    <select id="getVideoCollectionsByVideoIdAndUserId" resultType="com.liqun.dilidili.domain.VideoCollection">
        select *
        from t_video_collection
        where videoId = #{videoId}
          and userId = #{userId}
    </select>
    <select id="getVideoCoinsByVideoIdAndUserId" resultType="com.liqun.dilidili.domain.VideoCoin">
        select *
        from t_video_coin
        where videoId = #{videoId}
          and userId = #{userId}
    </select>

    <select id="getVideoCoinsAmount" parameterType="java.lang.Long" resultType="java.lang.Long">
        select sum(amount)
        from t_video_coin
        where videoId = #{videoId}
    </select>
    <select id="pageCountVideoComments" resultType="java.lang.Integer">
        select count(1)
        from t_video_comment
        where videoId = #{videoId}
          and rootId is null
    </select>
    <select id="pageListVideoComments" resultType="com.liqun.dilidili.domain.VideoComment">
        select *
        from t_video_comment
        where videoId = #{videoId}
          and rootId is null
        order by id desc
        limit #{start},#{size}
    </select>
    <select id="batchGetVideoCommentsByRootIds" resultType="com.liqun.dilidili.domain.VideoComment">
        select *
        from t_video_comment
        where rootId in
        <foreach collection="rootIds" item="rootId" index="index" open="(" close=")" separator=",">
            #{rootId}
        </foreach>
        order by id desc
    </select>


</mapper>